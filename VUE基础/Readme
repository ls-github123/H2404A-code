1、什么vue 
vue是一个MVVM形式的单页面应用的js框架。
2、MVVM
1. MVVM模式即Model-View-ViewModel模式，是一种用于构建用户界面的软件架构模式。在MVVM中，Model表示数据模型（数据  从接口返回的数据），View表示用户界面，ViewModel是连接Model和View的桥梁。
在Vue.js中，MVVM模式的作用是实现了数据的双向绑定。ViewModel通过监听Model的变化来自动更新View，同时用户通过View对ViewModel进行操作也会自动更新Model。这种双向绑定的方式简化了数据的处理流程，提高了开发效率
3、环境的配置
配置node（装好就不用再装了）
node -v  查看node的版本
npm -v 查看npm的版本
安装node是因为要用 npm
npm 是（node package manage） node的包管理工具   
安装包 npm install 包名   走的是国外的服务器
设置淘宝镜像  走的国内的
node需要设置淘宝的镜像   设置完了就不用再设置了 设置一次就行
cnpm -v
安装包
cnpm  install  包名  
配置vite（装好不用装了）
vite 是一个用来创建前端项目以及打包前端代码的工具。
cnpm  install -g create-vite
创建项目
create-vite 回车
project-name 项目名（不能为中文） 回车
选框架  选vue 再回车
Ts/javascript  选js  再回车
ok
cd 项目名  进入项目
cnpm install   安装项目依赖
npm run dev  启动项目   127.0.0.1:5173
4、app.vue
根组件
<template></template> html  承载数据的html
<script></script>  js
<style></style>样式
5、main.js  入口文件
所有的组件 都是经过main.js来执行的
6、指令
vue提供了一些可以操作html元素的指令，方便我们操作元素
1、v-on  给html元素绑定事件
语法：
<html元素 v-on:事件名=“方法名” 简写 @事件名=“函数”></html元素>
2、v-for  循环遍历元素   
<标签  v-for="(item,key)  in 循环的变量 "></biaoqian>
注意的是 循环出来的元素 得给一个标识  :key="key"
item key 是形参 临时变量 命名没有要求  item 当前遍历的元素 key当前下标	
3、v-bind 动态绑定属性
语法  <标签 v-bind:属性名=“变量”></标签>
简写 成  <标签 :属性名=“变量”></标签>
4、v-model 表单元素的双向数据绑定
语法  表单元素  v-model="变量"
用户改变数据后变量的值改了  变量值改了以后表单的值也改了
 表单  用户和系统交互
5、v-if/v-show
  <标签 v-if="变量"></v-if>
 根据条件创建或者删除元素
 v-show 根据条件显示或者隐藏数据
7、面试题
16、说一下vue常用的指令
v-on 事件绑定  
v-bind 绑定属性 
 v-for 元素遍历
 v-if 控制元素的创建与删除  
v-show 元素显示与隐藏 
v-model 表单元素双向绑定
17、说一下在使用v-for遍历元素时，为什么要有key属性
因为vue组件高度复用增加Key可以标识组件的唯一性，为了更好地区别各个组件 key的作用主要是为了高效的更新虚拟DOM
18、说一下v-if和v-show的区别
v-if 根据条件创建或者删除元素
v-show 根据条件显示或者隐藏元素
v-if 更适合元素的初始渲染  v-show更适合元素的切换
19、收一下v-model的作用
v-model是Vue中用于创建双向数据绑定的指令。它主要用于表单元素（如<input>、<textarea>和<select>）上，使得表单元素的值和Vue实例的数据保持同步。当表单元素的值改变时，Vue实例的数据也会更新；同样，当Vue实例的数据改变时，表单元素的值也会自动更新。
v-model实际上是v-bind和v-on的语法糖。它根据表单元素的类型自动设置监听的事件和绑定的属性。例如，对于文本输入框，v-model会监听input事件并绑定value属性
20、说一下axios的请求拦截和响应拦截
请求拦截器：在请求发送前进行一些操作，例如在每个请求体里面加上用户信息,统一做了处理的，如果要更改也是非常的容易。
响应拦截器：在接收到响应后再进行一些操作，例如在服务器返回登录状态失效的时候，需要重登录，跳转到登录页面，响应拦截器，就是是在请求结果的返回后的同时，先不直接导出，而是先对响应码等等的进行处理，处理好之后再导出给页面，如果将这个对象响应码的处理过程抽出来，就成了所谓的响应拦截器
8、element-plus
https://element-plus.org/zh-CN/
cnpm install element-plus --save  安装
找到main.js 添加下面的代码
import ElementPlus from 'element-plus'
import 'element-plus/dist/index.css'
9、axios
axios是用promise(es6新增js处理异步的一种方式)封装的ajax。用来异步的请求接口数据 和vue做完美的配合。
axios的使用：
安装
cnpm install axios --save
写请求
import axios from "axios"
get请求：
vue3给我们提供了一个生命周期函数 ，不需要我们自己调用。就是页面加载完毕后会自动的执行。一般我们在里面写数据的请求。
onMounted 页面加载完毕后执行
语法：
import {ref,onMounted} from "vue
onMounted(()=>{
//请求代码
})
10、跨域
跨域是浏览器的一种安全策略。只能请求 同协议 同ip 同端口的数据。
处理跨域有两种方案：
后台处理
django-cors-headers
安装
pip install django-cors-headers
注册应用
setting.py
Plain Text

INSTALLED_APPS = [
    ****
    'corsheaders'
]
添加中间jian
Plain Text

MIDDLEWARE = [
*******
    'corsheaders.middleware.CorsMiddleware'
   
]
在空白处加配置
CORS_ORIGIN_ALLOW_ALL = True#允许所有访问
CORS_ORIGIN_ALLOW_ALL =False
 CORS_ORIGIN_WHITELIST =('http//:localhost:8000',)

前端处理
