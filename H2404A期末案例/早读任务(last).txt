day02早读任务：
1. 字符串常用方法及作用？(至少五个)
2. 变量名的命名规则？



day03早读任务：
1. 列表增加数据的方法及作用？(3个)
	列表名.append(数据)：将数据作为一个整体添加到列表尾部
	列表名.insert(下标,数据)：将数据作为一个整体添加到指定下标位置前
	列表名.extend(可迭代对象)：将可迭代对象中的数据进行拆分，依次添加到列表尾部

2. 列表删除数据的方法及作用?（3个）
	列表名.pop(下标)：删除指定下标对应的数据；如果下标不存在则报错；
			如果不指定下标则默认删除列表尾部的元素
	列表名.remove(数据)：从列表中删除指定数据，如果数据不存在则报错
	列表名.clear()：清空列表，列表仍然存在
	del 列表：删除列表，列表不存在
	del 列表[下标]：删除列表中指定下标对应的数据，如果下标不存在则报错

3.列表python中的内置函数及作用？(5个)
	max()：求最大值
	min()：求最小值
	len()：统计数据长度、统计数据中元素的个数
	sum()：对数据中元素进行求和
	del()：删除指定数据

4.简述列表和元组之间的主要区别是什么。
	列表和元组之间的主要区别在于它们的可变性。
	列表是可变的，这意味着可以在其内部添加、删除或修改元素。
	而元组是不可变的，一旦创建，就不能修改其内部的元素。
	列表使用方括号[]表示，而元组使用圆括号()表示。



day04早读任务：
1.在Python中，字典的键有哪些要求？【考核知识点：字典的定义】
	字典的键必须是不可变类型，如整数、浮点数、字符串、元组等。
	字典的键能不重复

2.In关键字在python中是如何使用的？它可以用在哪一些数据类型中？【考核知识点：in关键字的使用】
	in用于检查元素是否存在于序列或集合中
	支持的数据类型：字符串、列表、元组、集合、字典(判断键是否存在)

3.字典中如何获取字典的键、获取字典的值、获取字典的键值对？【考核知识点：字典的方法】
	获取字典的键：字典名.keys()
	获取字典的值：字典名.values()
	获取字典的键值对：字典名.items()





day05早读任务：
1.对全局变量和局部变量的理解：
	全局变量：定义在函数外，在函数外和函数内都能使用的变量，全局变量的生命周期是整个程序的运行期间，也就是说只要程序没有结束运行，全局变量就会一直存在。
​	局部变量：定义在函数内，只能在函数内使用，不能在函数外使用，局部变量的生命周期是它们所在的函数被调用时开始，到函数返回时结束。

2.对不定长参数的理解？
	加了星号（*）的变量args会存放所有未命名的变量参数，args为元组
	而加**的变量kwargs会存放命名参数，即形如key=value的参数， kwargs为字典

3.return的理解？
	return语句的主要作用是结束当前函数的执行，并返回一个值给调用该函数的代码。return语句可以出现在函数体的任何位置，一旦执行到return语句，函数就会立即终止，并将return后面跟着的值（如果有的话）返回给调用者。
	这个值可以是任何Python数据类型，包括整数、浮点数、字符串、列表、字典等。如果return后面没有跟任何值，或者函数体中没有return语句，那么函数会默认返回None





day06早读任务：
1.拆包注意事项和可拆包的数据类型。【考核知识点：拆包】
	拆包时需要注意：要拆的数据的个数要与变量的个数相同，否则程序会异常
	可拆包的数据类型：字符串、列表、元组、字典(拆包之后获取到的数据为字典的键)






day07早读任务：
1. 对正则模块贪婪匹配和非贪婪的理解？
	贪婪模式：正则表达式一般趋向于最大长度匹配，也就是所谓的贪婪匹配，尽可能匹配多的字符。
	非贪婪模式：匹配到结果就好，尽可能匹配少的字符，一般是通过将?号写到匹配次数之后导致

2.列举正则模块方法及作用？
	findall():匹配字符串中所有符合条件的数据，存放在列表中返回；如果没有符合条件的数据，返回一个空列表
	match():从字符串开头开始匹配；一旦匹配成功立马返回对象，匹配失败返回None；通过group方法获取匹配成功的数据，匹配失败会报错
	search():从字符串任意位置开始匹配；一旦匹配成功立马返回对象，匹配失败返回None；通过group方法获取匹配成功的数据，匹配失败会报错

3.导包的两种方式？
	import 模块名     模块名.方法名()
	from 模块名 import 方法名     方法名()




day08早读任务：
1.对文件操作的理解？
	open():打开文件
	close():关闭文件
	read(n):一次性读取n个字节的数据；不指定参数n，默认读取全部
	readline():一次性读取一行数据，如果读取到空字符串，说明文件中内容读取结束
	readlines()：以列表的形式一次性读取文件中所有的内容；列表的每一项是文件的每一行
	write(数据)：往文件中写入数据，数据要求是字符串类型的数据

2.文件常用访问模式
	r：只读，默认访问方式；如果文件不存在则报错
	w：只写，如果文件不存在则创建文件；如果文件存在且有数据，则覆盖原本的数据
	a：追加，如果文件不存在则创建文件；如果文件存在且有数据，则原本数据后进行追加

3.time模块中的方法及作用？
	time.time()：获取当前时间戳
	time.sleep(n)：阻塞程序，让程序休眠n秒

4.random模块中的方法及作用？
	random.random()：生成0-1之间的随即小数
	random.randint(a,b)：生成a-b之间的随机整除，包括a和b
	random.choice(可迭代对象)：从可迭代对象中随机抽取一个元素







day09早读任务：
1.列举python中的魔法方法及其作用：
	__new__：类的构造器，创建初始化后的基本实例对象
	__init__：类的初始化方法，给实例对象增加实例属性
	__str__：返回实例对象的描述信息
	__del__：类的析构器，在实例对象被销毁前被调用，释放资源




day10早读任务：
1.谈谈对面向对象三要素的理解？
	继承：子类继承父类，子类拥有了父类的属性和方法；提高代码的重用性，方便代码的维护和更新
	封装：将对象的属性和实现细节进行封装，仅对外提供公共的访问方式；
		提高代码的安全性；通过私有属性和私有方法实现封装
	多态：不同的子类对象调用相同的父类方法，产生不同的执行结果；
		提高代码的灵活度；多态实现条件：继承和方法重写



day11早读任务：
1.谈谈对python中引用计数的理解​
	引用计数法的原理是每个对象维护一个ob_ref，用来记录当前对象被引用的次数，当指向该对象的内存的引用计数器为0的时候，该内存将会被Python虚拟机销毁，缺点是维护引用计数消耗资源，无法解决循环引用的问题。


2.谈谈对python中标记清除的理解
	它分为两个阶段：第一阶段是标记阶段，GC会把所有的『活动对象』打上标记，第二阶段是把那些没有标记的对象『非活动对象』进行回收。


3.谈谈对python中分代回收的理解
	Python将内存分为了3“代”，分别为年轻代（第0代）、中年代（第1代）、老年代（第2代），他们对应的是3个链表，新创建的对象都会分配在年轻代，年轻代链表的总数达到上限时，Python垃圾收集机制就会被触发，把那些可以被回收的对象回收掉，而那些不会回收的对象就会被移到中年代去，依此类推，分代回收是建立在标记清除技术基础之上

4.实例方法、类方法、静态方法的区别：
实例方法：
	直接定义即可，第一个参数必须是实例对象self，需要实例对象进行调用；
	内部可以访问类属性(类属性通过类名.属性名的方式访问)和实例属性；
类方法：
	定义需要使用@classmethod装饰器，第一个参数必须是类对象cls，类对象和实例对象都能调用；
	内部可以访问类属性  cls.属性名的方式就可以访问
静态方法：
	定义需要使用@staticmethod装饰器，方法不携带self和cls参数，类对象和实例对象都能调用；
	内部不能访问类属性，也不能访问实例属性；只能访问自己内部的局部变量




day12早读任务：
1.对深浅拷贝的理解？
	浅拷贝：只拷贝第一层数据，深层数据仍然是指向关系
	深拷贝：完全拷贝，原数据与拷贝之后的数据没有任何关系

2. 迭代器的功能？
	返回可迭代对象中的数据
	记录当前迭代位置
	迭代完成再次迭代抛出停止迭代的异常






day13早读任务：
1.四大高阶函数及作用？【考核知识点：四大高阶函数】
	map(func,iter)：将函数 func 依次作用在参数可迭代对象中的每一个元素上，结果返回一个迭代器对象
	reduce(func,iter)：使用时需要导包，函数func对可迭代对象中的数据进行累计操作，结果返回一个值
	filter(func,iter)：将函数 func 依次对可迭代对象中的每一个元素进行过滤，保留满足条件的数据，结果返回一个迭代器对象
	sorted(iter,key,reverse)：对可迭代对象中的数据以key规则进行排序




day14早读任务：
1.请简述如何编写闭包，及闭包的优缺点？【考核知识点：闭包】
	编写闭包需要满足三点：
		内外函数嵌套
		内函数引用外函数作用域下的非全局变量
		外函数返回内函数对象
	优缺点：
		优点：为变量续命
		缺点：浪费内存
2.装饰器的作用？【考核知识点：装饰器的作用】
	在不改变原函数的基础上给函数增加新的功能
	利用了闭包的思路，本质上就是一个内部闭函数




day15早读任务：
1.MySQL中的VarChar和Char有什么区别？【考核知识点：mysql数据类型】
	char是定长字符串，长度是固定的
	如果插入数据的长度小于char的固定长度时，则用空格填充
	因为长度固定，所以存取速度要比varchar快很多，甚至能快50%
	varchar表示是可变长字符串，长度可以伸缩
	插入的数据是多长，就按照多长来存储
	varchar在存取方面与char相反，它存取慢，因为长度不固定






day16早读任务：
1.什么是事务？【考核知识点：事务的概念】
事务是由一步或几步数据库操作序列组成逻辑执行单元，这系列操作要么全部执行，要么全部放弃执行。
如果某一事务执行成功，则在该事物中对数据进行的修改均会提交，数据库中的数据会更改
如果事务执行时遇到错误则回滚，数据将全部恢复到操作前的状态

2.事务的四大特性【考核知识点：事务的四大特性】
原子性：一个事务必须被视为一个不可分割的最小工作单元，整个事务中的所有操作要么全部提交成功，要么全部失败回滚
一致性：数据库总是从一个一致性的状态转换到另一个一致性的状态
隔离性：通常来说，一个事务所做的修改在最终提交以前，对其他事务是不可见的。
持久性：一旦事务提交，则其所做的修改会永久保存到数据库。

3.表结构的优化【考核知识点：表结构的优化】
给字段选取最合适的数据类型
数据类型的宽度尽可能的小
允许部分数据（run）冗余，可以节省连表查询的次数





day17早读任务：
1.请说明在Python中使用PyMySQL库进行MySQL数据库查询的基本步骤【考核知识点：pymysql查询数据的步骤】
	导入PyMySQL模块。
	创建数据库连接。
	创建一个游标对象。
	使用游标对象执行SQL查询。
	处理查询结果（如获取数据、遍历数据等）。
	关闭游标和数据库连接。

2.请说明在pymysql查询数据的方法及作用？【考核知识点：pymysql查询数据的方法】
	Fetchone():一次查询一条数据
	Fetchmany(n):一次查询n条数据，如果不指定参数n则查询一条数据。如果n超出数据条数范围则直接返回所有的数据
	Fetchall():一次性查询出所有的数据